<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Os on Well</title>
    <link>https://tmhm.github.io/categories/os/</link>
    <description>Recent content in Os on Well</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>wells217@163.com (Well)</managingEditor>
    <webMaster>wells217@163.com (Well)</webMaster>
    <copyright>(c) 2017 Well.</copyright>
    <lastBuildDate>Mon, 13 Feb 2017 00:48:00 +0000</lastBuildDate>
    <atom:link href="https://tmhm.github.io/categories/os/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>win10禁用自动更新服务</title>
      <link>https://tmhm.github.io/2017/02/13/win10%E7%A6%81%E7%94%A8%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Mon, 13 Feb 2017 00:48:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2017/02/13/win10%E7%A6%81%E7%94%A8%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;按Win+R，打开运行，输入“services.msc&amp;raquo;打开服务；&lt;/li&gt;
&lt;li&gt;找到“Windows Update”，选择属性，修改为禁用即可；&lt;/li&gt;
&lt;li&gt;开启，反之亦然.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>再探VIM配置</title>
      <link>https://tmhm.github.io/2016/09/02/%E5%86%8D%E6%8E%A2vim%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 02 Sep 2016 16:13:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/09/02/%E5%86%8D%E6%8E%A2vim%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;最初找到这个发行版&lt;a href=&#34;https://github.com/spf13/spf13-vim&#34;&gt;spf13-vim&lt;/a&gt;，在ubuntu上用的还比较方便，有很多插件；最近在mac上用，总是不兼容vim，用brew安装了最新的vim，还是跟系统不兼容，总是有问题，于是就找到了下面第二个配置。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/j1z0/vim-config&#34;&gt;vim－config&lt;/a&gt;，这哥们基于vundle配置了一些有用的插件，国内有某君翻译了&lt;a href=&#34;http://codingpy.com/article/vim-and-python-match-in-heaven/&#34;&gt;他的博文&lt;/a&gt;.美中不足的是，安装有问题，有几处安装不成功。使用的时候也是有问题。在翻译的文章最后，编者才告知有问题，但是并没有给出解决的办法。于是我又开始自己造轮子了。&lt;/li&gt;
&lt;li&gt;拷贝默认的配置文件 &lt;code&gt;$ cp /usr/sh are/vim/vimrc ~/.vimrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;编辑文件 &lt;code&gt;$ vim ~/.vimrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装Vundle: &lt;code&gt;$ git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将插件管理器&lt;a href=&#34;https://github.com/VundleVim/Vundle.vim&#34;&gt;vundle&lt;/a&gt;的Configure Plugins:拿过来&lt;/li&gt;
&lt;li&gt;再借用了上面&lt;a href=&#34;https://github.com/j1z0/vim-config&#34;&gt;vim－config&lt;/a&gt;中的高亮颜色插件，折叠等,并参考了该&lt;a href=&#34;http://www.jianshu.com/p/a0b901307b76&#34;&gt;博文&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;于是得到下面的配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set nocompatible              &amp;quot; be iMproved, required
filetype off                  &amp;quot; required

&amp;quot; set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
&amp;quot; alternatively, pass a path where Vundle should install plugins
&amp;quot;call vundle#begin(&#39;~/some/path/here&#39;)

&amp;quot; let Vundle manage Vundle, required
Plugin &#39;VundleVim/Vundle.vim&#39;

&amp;quot; The following are examples of different formats supported.
&amp;quot; Keep Plugin commands between vundle#begin/end.
&amp;quot; plugin on GitHub repo
&amp;quot;Plugin &#39;tpope/vim-fugitive&#39;
&amp;quot; plugin from http://vim-scripts.org/vim/scripts.html
&amp;quot;Plugin &#39;L9&#39;
&amp;quot; Git plugin not hosted on GitHub
&amp;quot;Plugin &#39;git://git.wincent.com/command-t.git&#39;
&amp;quot; git repos on your local machine (i.e. when working on your own plugin)
&amp;quot;Plugin &#39;file:///home/gmarik/path/to/plugin&#39;
&amp;quot; The sparkup vim script is in a subdirectory of this repo called vim.
&amp;quot; Pass the path to set the runtimepath properly.
&amp;quot;Plugin &#39;rstacruz/sparkup&#39;, {
&#39;rtp&#39;
        : &#39;vim/&#39;
}
&amp;quot; Install L9 and avoid a Naming conflict if you&#39;ve already installed a
&amp;quot;different version somewhere else.
&amp;quot;Plugin &#39;ascenator/L9&#39;, {&#39;name&#39;: &#39;newL9&#39;}

&amp;quot;&amp;quot;code folding
Plugin &#39;tmhedberg/SimpylFold&#39;

&amp;quot;Colors!!!
Plugin &#39;altercation/vim-colors-solarized&#39;
Plugin &#39;jnurmine/Zenburn&#39;


&amp;quot; All of your Plugins must be added before the following line
call vundle#end()            &amp;quot; required
filetype plugin indent on    &amp;quot; required
&amp;quot; To ignore plugin indent changes, instead use:
&amp;quot;filetype plugin on
&amp;quot;
&amp;quot; Brief help
&amp;quot; :PluginList       - lists configured plugins
&amp;quot; :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
&amp;quot; :PluginSearch foo - searches for foo; append `!` to refresh local cache
&amp;quot; :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
&amp;quot;
&amp;quot; see :h vundle for more details or wiki for FAQ
&amp;quot; Put your non-Plugin stuff after this line

&amp;quot; ==================

&amp;quot; Configuration file for vim
set modelines=0         &amp;quot; CVE-2007-2438

&amp;quot; Normally we use vim-extensions. If you want true vi-compatibility
&amp;quot; remove change the following statements
&amp;quot;set nocompatible       &amp;quot; Use Vim defaults instead of 100% vi compatibility
set backspace=2         &amp;quot; more powerful backspacing

&amp;quot; Don&#39;t write backup file if vim is being called by &amp;quot;crontab -e&amp;quot;
au BufWrite /private/tmp/crontab.* set nowritebackup nobackup
&amp;quot; Don&#39;t write backup file if vim is being called by &amp;quot;chpass&amp;quot;
au BufWrite /private/etc/pw.* set nowritebackup nobackup

set number

&amp;quot;filetype on

set history=1000

&amp;quot; 启动的时候黑色背景，关闭，启动的时候彩色，后面有设置F5切换
&amp;quot;set background=dark

&amp;quot;语法高亮
&amp;quot; For full syntax highlighting:
let python_highlight_all=1
syntax on

set autoindent

set smartindent

set tabstop=4

set shiftwidth=4

set showmatch

&amp;quot;当vim进行编辑时，如果命令错误，会发出一个响声，该设置去掉响声
set vb t_vb=

&amp;quot;在编辑过程中，在右下角显示光标位置的状态行
set ruler

set incsearch

&amp;quot;默认情况下，寻找匹配是高亮度显示的，该设置关闭高亮显示

&amp;quot;set nohls

&amp;quot;custom keys
let mapleader=&amp;quot; &amp;quot;
map &amp;lt;leader&amp;gt;g  :YcmCompleter GoToDefinitionElseDeclaration&amp;lt;CR&amp;gt;
&amp;quot;&amp;quot;
call togglebg#map(&amp;quot;&amp;lt;F5&amp;gt;&amp;quot;)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后别忘了
在vim界面输入&lt;code&gt;:PluginInstall&lt;/code&gt;安装&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://images2015.cnblogs.com/blog/781469/201609/781469-20160903112937168-1853675546.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;为方便有兴趣的同学使用，我将配置文件放到&lt;a href=&#34;https://github.com/tmhm/vim-config&#34;&gt;github&lt;/a&gt;上了,只要clone下来，进入该文件目录下，执行&lt;code&gt;setup_vim.sh&lt;/code&gt;即可。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Enjoy it～&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>vim初探</title>
      <link>https://tmhm.github.io/2016/05/21/vim%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Sat, 21 May 2016 01:49:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/05/21/vim%E5%88%9D%E6%8E%A2/</guid>
      <description>&lt;p&gt;https://github.com/spf13/spf13-vim&lt;/p&gt;
&lt;p&gt;安装了此博主的开源项目。&lt;/p&gt;
&lt;p&gt;：vsp &amp;nbsp; &amp;mdash;&amp;mdash;竖分屏&lt;/p&gt;
&lt;p&gt;：sp &amp;nbsp;　&amp;mdash;&amp;mdash;横分屏&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu技巧</title>
      <link>https://tmhm.github.io/2016/03/12/ubuntu%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sat, 12 Mar 2016 03:34:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/03/12/ubuntu%E6%8A%80%E5%B7%A7/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;在终端界面里面查找，命令：ctrl + shift +f&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;VMware 中 Ubuntu 不能全屏：&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;转到虚拟机&amp;ndash;&amp;gt;安装VMware Tools&lt;/li&gt;
&lt;li&gt;把装载的 VMware Tools CD里面的VMwareTools.x.x.x-xxxx.tar.gz文件解压到桌面&lt;/li&gt;
&lt;li&gt;cd进入解压位置，运行&amp;nbsp;sudo ./vmware-install.pl -d &amp;nbsp;&lt;span style=&#34;font-size: 13px;&#34;&gt;&lt;em&gt;（注意：-d 开关假定您希望接受默认设置。如果不使用 -d，请按 Return 接受默认值或提供您自己的答案。）&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;重启&lt;/li&gt;
&lt;li&gt;此时已经安装VMware tools，但是在ubuntu在VMware控制台显示时，四周仍然有黑框，可以在VMware中点击：查看&amp;ndash;&amp;gt;自动调整大小&amp;ndash;&amp;gt;自动适应客户机。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;nbsp;codeblocks 编译开发环境(需要先安装gcc，g++,gdb)&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;添加头文件：依次点击project-&amp;gt;bulid options-&amp;gt;Search directories，在该标签页中点击Compiler，单击Add按钮添加头文件路径&lt;/li&gt;
&lt;li&gt;添加静态库路径：依次点击project-&amp;gt;bulid options-&amp;gt;Linker setting，在该标签页中点击Add按钮添加静态库路径。&lt;/li&gt;
&lt;li&gt;设置main函数参数：Project-&amp;gt;Set programs&amp;rsquo; arguments&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;&amp;nbsp;查看ssh服务状态&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;ps -e |grep ssh&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>shell学习</title>
      <link>https://tmhm.github.io/2016/03/10/shell%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Thu, 10 Mar 2016 08:36:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/03/10/shell%E5%AD%A6%E4%B9%A0/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;readlink是linux系统中一个常用工具，主要用来找出符号链接所指向的位置。&lt;/li&gt;
&lt;li&gt;定义变量“=”两边不能有空格，否则会被shell解析错误。&lt;/li&gt;
&lt;li&gt;tee 同时将输出内容显示在屏幕上、记录在文件里&lt;/li&gt;

&lt;li&gt;&lt;p&gt;三种引号‘’，“”，``。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rm -rf ‘my document’  &amp;mdash;-当命令行里面包含空格时，用单引号包含起来&lt;/li&gt;
&lt;li&gt;这时也可由用双引号，区别在于双引号的值会被变量的之替换，单引号保持原样。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ ABC=hello
$ echo &#39;string is ${ABC}&#39;
string is ${ABC}
$ echo &amp;quot;string is ${ABC}&amp;quot;
string is hello
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;反引号实际上就是命令替换&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo `uname`  #等价 echo $(uname)
$ echo `uname -a`
Linux ubuntu 3.13.0-24-generic #46-Ubuntu SMP Thu Apr 10 19:11:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux
$ uname -a
Linux ubuntu 3.13.0-24-generic #46-Ubuntu SMP Thu Apr 10 19:11:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;脚本的执行&#34;&gt;脚本的执行&lt;/h4&gt;

&lt;p&gt;&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;&lt;span style=&#34;color: #000000;&#34;&gt;$ vi test.sh
$ cat test.sh
echo &lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&amp;laquo;&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt; this is a test&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&amp;laquo;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&lt;/p&gt;

&lt;p&gt;$ ls &lt;/span&gt;-&lt;span style=&#34;color: #000000;&#34;&gt;al
total &lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;
drwxr&lt;/span&gt;-xr-x  &lt;span style=&#34;color: #800080;&#34;&gt;2&lt;/span&gt; xwei xwei &lt;span style=&#34;color: #800080;&#34;&gt;4096&lt;/span&gt; Mar &lt;span style=&#34;color: #800080;&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color: #800080;&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt; .
drwxr&lt;/span&gt;-xr-x &lt;span style=&#34;color: #800080;&#34;&gt;16&lt;/span&gt; xwei xwei &lt;span style=&#34;color: #800080;&#34;&gt;4096&lt;/span&gt; Mar &lt;span style=&#34;color: #800080;&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;15&lt;/span&gt;:&lt;span style=&#34;color: #800080;&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt; ..
&lt;/span&gt;-rw-rw-r&amp;ndash;  &lt;span style=&#34;color: #800080;&#34;&gt;1&lt;/span&gt; xwei xwei   &lt;span style=&#34;color: #800080;&#34;&gt;26&lt;/span&gt; Mar &lt;span style=&#34;color: #800080;&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color: #800080;&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt; test.sh
$ . test.sh  #以source test.sh 方式执行，读入文件中的命令，在当前shell执行，source内置命令，无需执行权限，其可以缩写为一个小数点
 &lt;/span&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;is&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt; a test
$ .&lt;/span&gt;/&lt;span style=&#34;color: #000000;&#34;&gt;test.sh  #
bash: .&lt;/span&gt;/&lt;span style=&#34;color: #000000;&#34;&gt;test.sh: Permission denied&lt;/p&gt;

&lt;p&gt;xwei@ubuntu:&lt;/span&gt;~/Desktop$ chmod a+&lt;span style=&#34;color: #000000;&#34;&gt;x test.sh
xwei@ubuntu:&lt;/span&gt;~/Desktop$ ls -&lt;span style=&#34;color: #000000;&#34;&gt;al
total &lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;
drwxr&lt;/span&gt;-xr-x  &lt;span style=&#34;color: #800080;&#34;&gt;2&lt;/span&gt; xwei xwei &lt;span style=&#34;color: #800080;&#34;&gt;4096&lt;/span&gt; Mar &lt;span style=&#34;color: #800080;&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color: #800080;&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt; .
drwxr&lt;/span&gt;-xr-x &lt;span style=&#34;color: #800080;&#34;&gt;16&lt;/span&gt; xwei xwei &lt;span style=&#34;color: #800080;&#34;&gt;4096&lt;/span&gt; Mar &lt;span style=&#34;color: #800080;&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;15&lt;/span&gt;:&lt;span style=&#34;color: #800080;&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt; ..
&lt;/span&gt;-rwxrwxr-x  &lt;span style=&#34;color: #800080;&#34;&gt;1&lt;/span&gt; xwei xwei   &lt;span style=&#34;color: #800080;&#34;&gt;26&lt;/span&gt; Mar &lt;span style=&#34;color: #800080;&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color: #800080;&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt; test.sh
$ .&lt;/span&gt;/&lt;span style=&#34;color: #000000;&#34;&gt;test.sh  #在一个子shell中执行命令
 &lt;/span&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;is&lt;/span&gt; a test&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debian初识（选择最佳镜像发布站点加入source.list文件）</title>
      <link>https://tmhm.github.io/2016/03/08/debian%E5%88%9D%E8%AF%86%E9%80%89%E6%8B%A9%E6%9C%80%E4%BD%B3%E9%95%9C%E5%83%8F%E5%8F%91%E5%B8%83%E7%AB%99%E7%82%B9%E5%8A%A0%E5%85%A5source.list%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 08 Mar 2016 07:28:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/03/08/debian%E5%88%9D%E8%AF%86%E9%80%89%E6%8B%A9%E6%9C%80%E4%BD%B3%E9%95%9C%E5%83%8F%E5%8F%91%E5%B8%83%E7%AB%99%E7%82%B9%E5%8A%A0%E5%85%A5source.list%E6%96%87%E4%BB%B6/</guid>
      <description>

&lt;h4 id=&#34;选择最佳镜像发布站点加入source-list文件-netselect-netselect-apt&#34;&gt;选择最佳镜像发布站点加入source.list文件：netselect，netselect-apt&lt;/h4&gt;

&lt;p&gt;该将哪个Debian镜像发布站点加入&lt;samp&gt;source.list&lt;/samp&gt;文件？&amp;rdquo;。有很多方法来选择镜像发布站点，专家们可能会写一个脚本去测试 不同站点的ping时间。不过其实有一个程序可以帮你：&amp;nbsp;&lt;strong&gt;netselect&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;要安装netselect，通常使用：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# apt-get install netselect

# sudo netselect ftp.debian.org http.us.debian.org ftp.at.debian.org download.unesp.br ftp.debian.org.br ftp.hk.debian.org ftp.tw.debian.org debian.linux.org.tw ftp.sjtu.edu.cn mirrors.163.com
  150 mirrors.163.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;表示，在netselect后列出的所有主机中，mirrors.163.com是下载速 度最快的主机，其得分为150。(注意！！这是在我电脑上的测试结果，不同的网络 节点网速会大不相同，所以这个分值不一定适用于其它电脑)&lt;/p&gt;
&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;# apt-&lt;span style=&#34;color: #0000ff;&#34;&gt;get&lt;/span&gt; install netselect-apt&lt;br /&gt;# netselect-apt stable&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;从0.3.ds1版开始，netselect源码包中包含了&lt;strong&gt;netselect-apt&lt;/strong&gt;二 进制包，它使上述操作自动完成。只需将发布目录树做为参数(默认为stable)输入，&amp;nbsp;&lt;samp&gt;sources.list&lt;/samp&gt;文件就会生成速度最快的main和non-US镜像站点列表，并保 存在当前目录下。下面的例子生成一个包含stable发布镜像站点列表的sources.list：&lt;/p&gt;
&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;&lt;span style=&#34;color: #000000;&#34;&gt; # ls sources.list
     ls: sources.list: File or directory not found
 # netselect&lt;/span&gt;-&lt;span style=&#34;color: #000000;&#34;&gt;apt stable
     (...)
 # ls &lt;/span&gt;-&lt;span style=&#34;color: #000000;&#34;&gt;l sources.list
     sources.list
 #&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;记住：&lt;/strong&gt;&lt;samp&gt;sources.list&lt;/samp&gt;生成在当前目录下，必须将其移 至&lt;samp&gt;/etc/apt&lt;/samp&gt;目录。 根据文档内提示：打开注释deb-src。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;putty在win10下面访问不了debian8.2，可能原因有：&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　　　1，防火墙&lt;/p&gt;
&lt;p&gt;　　　　2，网卡驱动不支持！！这点需注意，升级电脑，被坑！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;nbsp;查看软件安装位置&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;whereis torcs&lt;/pre&gt;
&lt;p&gt;man whereis&lt;/p&gt;
&lt;p&gt;NAME&lt;br /&gt;       whereis  -  locate the binary, source, and manual page files for a com‐&lt;br /&gt;       mand&lt;/p&gt;

&lt;/div&gt;



&lt;/li&gt;

&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;查看软件运行位置&lt;/strong&gt;
&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;which torcs  &lt;/pre&gt;
&lt;p&gt;man which&lt;br /&gt;NAME&lt;br /&gt;       which - locate a command&lt;/p&gt;

&lt;/div&gt;


&lt;/li&gt;

&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu 12.04lts 安装 mysql，通过QT访问</title>
      <link>https://tmhm.github.io/2016/02/18/ubuntu-12.04lts-%E5%AE%89%E8%A3%85-mysql%E9%80%9A%E8%BF%87qt%E8%AE%BF%E9%97%AE/</link>
      <pubDate>Thu, 18 Feb 2016 10:58:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/02/18/ubuntu-12.04lts-%E5%AE%89%E8%A3%85-mysql%E9%80%9A%E8%BF%87qt%E8%AE%BF%E9%97%AE/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;安装server
&lt;code&gt;$ sudo apt-get install mysql-server&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装驱动&lt;code&gt;$ sudo apt-get install libqt4-sql-mysql&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;测试&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;$ dpkg --list | grep mysql&amp;lt;/strong&amp;gt;
ii  libdbd-mysql-perl                           4.020-1build2                           Perl5 database interface to the MySQL database
ii  libmysqlclient18                            5.5.47-0ubuntu0.12.04.1                 MySQL database client library
ii  libqt4-sql-mysql                            4:4.8.1-0ubuntu4.9                      Qt 4 MySQL database driver
ii  mysql-client-5.5                            5.5.47-0ubuntu0.12.04.1                 MySQL database client binaries
ii  mysql-client-core-5.5                       5.5.47-0ubuntu0.12.04.1                 MySQL database core client binaries
ii  mysql-common                                5.5.47-0ubuntu0.12.04.1                 MySQL database common files, e.g. /etc/mysql/my.cnf
ii  mysql-server                                5.5.47-0ubuntu0.12.04.1                 MySQL database server (metapackage depending on the latest version)
ii  mysql-server-5.5                            5.5.47-0ubuntu0.12.04.1                 MySQL database server binaries and system database setup
ii  mysql-server-core-5.5                       5.5.47-0ubuntu0.12.04.1                 MySQL database server binaries
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;在目录 /usr/lib/i386-linux-gnu/qt4/plugins/sqldrivers/   找到文件 libqsqlmysql.so&lt;br /&gt;
复制到 qt的安装目录下路径： /usr/local/Trolltech/Qt-4.8.6/plugins/sqldrivers/&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo cp libqsqlmysql.so /usr/local/Trolltech/Qt-4.8.6/plugins/sqldrivers/

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;确定具有x属性&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;-rwxr-xr-x 1 tl tl 533748 8月 9 2012 libqsqlite.so
-rwxr-xr-x 1 tl tl 67816 5月 28 2015 libqsqlmysql.so
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;测试结果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://images2015.cnblogs.com/blog/781469/201602/781469-20160218185633503-1658976193.jpg&#34; alt=&#34;&#34; /&gt;　　&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>win7下安装ubuntu14.04lts 双系统</title>
      <link>https://tmhm.github.io/2016/01/14/win7%E4%B8%8B%E5%AE%89%E8%A3%85ubuntu14.04lts-%E5%8F%8C%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Thu, 14 Jan 2016 16:11:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/01/14/win7%E4%B8%8B%E5%AE%89%E8%A3%85ubuntu14.04lts-%E5%8F%8C%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;首先，在win7下的硬盘管理&lt;/li&gt;

&lt;li&gt;&lt;p&gt;压缩出一块空闲的分区，即压缩卷之后，不做任何操作。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;并且确保该空闲卷是“基本”类型
　　　    　不是的话，&lt;a href=&#34;http://www.jianshu.com/p/2f0731274ee6&#34;&gt;参考&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;下载免费的分区助手
注：一定要下载分区助手3.0版本，其它的高版本如4.0没有包含动态磁盘转换器这个工具&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装并运行。在主界面的左上边，点击“动态磁盘转换器”来运行这个程序。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;然后你将看动态磁盘转换器的欢迎界面，你可以读一下它的简介，然后直接点击“下一步”按钮以进入下一个向导页&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在这儿的“操作选择”页里，请选择“转换动态磁盘到基本磁盘”选项，并点击“下一步”按钮&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;然后进入“动态磁盘列表”页，在这里程序要求你选择一个你想转换到基本磁盘的动态磁盘&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;操作确认，请在“我已经决定好执行这个转换”上打勾，然后点击“执行”按钮开始转换这个动态磁盘到基本磁盘。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在几秒后，这个转换将完成，同时程序可能要求你重启电脑，在重启电脑之后，你在进入Windows的磁盘管理器中查看磁盘时，它已经被成功改变到基本磁盘了&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;分区空闲，不可用！！问题&lt;/p&gt;

&lt;p&gt;如果显示的未识别，则需要将windows硬盘转换成逻辑分区。用上面的分区工具即可。3.0版本没有转换逻辑分区的功能，我用的是6.1版本的。&lt;/p&gt;

&lt;p&gt;原因是，&lt;strong&gt;主分区只能最多有4个&lt;/strong&gt;，故要将其中一个主分区转换为逻辑分区，然后才可以通过u盘安装ubuntu。&lt;/div&gt;
&lt;div class=&#34;zm-editable-content clearfix&#34;&gt;&lt;strong&gt;最后得到用来装ubuntu的分区应该是：&lt;span style=&#34;color: #ff0000;&#34;&gt;基本的、主分区。&lt;/p&gt;

&lt;p&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/div&gt;
&lt;div class=&#34;zm-editable-content clearfix&#34;&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&lt;img src=&#34;http://images2015.cnblogs.com/blog/781469/201601/781469-20160118095823654-340201817.jpg&#34; alt=&#34;&#34; /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;用做好的u盘ubuntu14.04LTS直接进行多系统安装即可。如下图选项所示。
&lt;img src=&#34;http://images2015.cnblogs.com/blog/781469/201601/781469-20160118095918216-1458262544.jpg&#34; alt=&#34;&#34; width=&#34;533&#34; height=&#34;456&#34; /&gt;&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>linux多线程并发</title>
      <link>https://tmhm.github.io/2016/01/08/linux%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B9%B6%E5%8F%91/</link>
      <pubDate>Fri, 08 Jan 2016 09:40:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/01/08/linux%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B9%B6%E5%8F%91/</guid>
      <description>

&lt;h3 id=&#34;进程和线程的概念&#34;&gt;进程和线程的概念&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;进程&lt;/p&gt;

&lt;p&gt;进程包括程序映象、地址空间等要素。内核采用PCB来管理进程。进程是内核进行调度的基本单元，每个独立的进程都有自己的代码段、数据段以及堆栈，它们有自己的虚拟地址空间，多个进程间互不影响。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;线程&lt;/p&gt;

&lt;p&gt;在linux系统中，实际上，线程和进程都是以统一的方式来管理的。线程也是内核进行调度的基本单元。&lt;/p&gt;

&lt;p&gt;不同点在于:
&amp;gt; 线程没有自己独立的地址空间，创建出来的新线程将和创建它的进程
&amp;gt;（或线程)共享同一个虚拟地址空间，它们被置于同一个线程组中。线程的代码段、全局数据段、堆及其他一些诸如文件描述符表等内核管理的东西在同一组内是共享的，
&amp;gt; 但是每个线程都有自己独立的栈空间。&lt;/p&gt;

&lt;p&gt;因此，多线程环境下多全局变量的访问有可能需要同步，但是局部变量仍然有各自的存储空间，互不影响。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;与多进程相比，多线程具有的优点：
&amp;gt;1，线程适合多任务通信环境。多线程间的通信比多进程的更简单，但是需要注意同步问题&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2，线程的创建和调度更高效。创建线程时，无需单独复制进程的内存空间或文件描述符等；切换线程时不需要更换整个页表。&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>嵌入式linux问题杂锦</title>
      <link>https://tmhm.github.io/2016/01/08/%E5%B5%8C%E5%85%A5%E5%BC%8Flinux%E9%97%AE%E9%A2%98%E6%9D%82%E9%94%A6/</link>
      <pubDate>Fri, 08 Jan 2016 08:35:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/01/08/%E5%B5%8C%E5%85%A5%E5%BC%8Flinux%E9%97%AE%E9%A2%98%E6%9D%82%E9%94%A6/</guid>
      <description>&lt;p&gt;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;tftp 在开发板上不能获取共享文件，出现：&lt;/strong&gt;&lt;/strong&gt;&amp;nbsp;Permission denied&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;是因为，我在/sys目录下执行的，&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;cnblogs_Highlighter&#34;&gt;
&lt;pre class=&#34;brush:cpp;gutter:true;&#34;&gt;root@am437x-evm:/sys# tftp -g -r myTcpTest 172.20.9.59
tftp: can&amp;rsquo;t open &amp;lsquo;myTcpTest&amp;rsquo;: Permission denied
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;　　回到～ 主文件夹，既可以获取：&lt;/p&gt;
&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;root@am437x-evm:~# tftp -g -r myTcpTest &lt;span style=&#34;color: #800080;&#34;&gt;172.20&lt;/span&gt;.&lt;span style=&#34;color: #800080;&#34;&gt;9.59&lt;/span&gt; &lt;/pre&gt;
&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu12.04安装KDevelop</title>
      <link>https://tmhm.github.io/2016/01/06/ubuntu12.04%E5%AE%89%E8%A3%85kdevelop/</link>
      <pubDate>Wed, 06 Jan 2016 11:09:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/01/06/ubuntu12.04%E5%AE%89%E8%A3%85kdevelop/</guid>
      <description>&lt;p&gt;两条命令即可：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install kdevelop
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu12.04LTS 系统下QT 4.8.6和QT creator 2.5.2的安装</title>
      <link>https://tmhm.github.io/2016/01/06/ubuntu12.04lts-%E7%B3%BB%E7%BB%9F%E4%B8%8Bqt-4.8.6%E5%92%8Cqt-creator-2.5.2%E7%9A%84%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 06 Jan 2016 10:30:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/01/06/ubuntu12.04lts-%E7%B3%BB%E7%BB%9F%E4%B8%8Bqt-4.8.6%E5%92%8Cqt-creator-2.5.2%E7%9A%84%E5%AE%89%E8%A3%85/</guid>
      <description>&lt;p&gt;鉴于，下载QT5.5安装，编译总是有问题，可能是配置不正确。
于是按照论坛的一些资料，就换回QT4版本，具体实施步骤如下：
在qt官网&lt;code&gt;http://download.qt.io/archive/&lt;/code&gt;下的
qt4.8.6：&lt;code&gt;http://download.qt.io/archive/qt/4.8/4.8.6/qt-everywhere-opensource-src-4.8.6.tar.gz&lt;/code&gt;
和 qt creator2.5.2：&lt;code&gt;http://download.qt.io/archive/qtcreator/2.5/qt-creator-linux-x86-opensource-2.5.2.bin&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在终端依次输入以下命令：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;tar xzvf qt-everywhere-opensource-src-4.8.6.tar.gz
cd qt-everywhere-opensource-src-4.8.6
sudo apt-get install g++
sudo apt-get install libX11-dev libXext-dev libXtst-dev
配置QT Library ，输入命令： ./configure
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置完成，会得到如下终端界面：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Qt is now configured for building. Just run &#39;make&#39;.
Once everything is built, you must run &#39;make install&#39;.
Qt will be installed into /usr/local/Trolltech/Qt-4.8.6
 
To reconfigure, run &#39;make confclean&#39; and &#39;configure&#39;.
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;然后再输入：&lt;code&gt;make&lt;/code&gt;
生成QT库，以及编译所有演示程序&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里的时间挺长的。。。。。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;执行安装命令：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo make install  
（卸载的时候也是在此目录下，执行：sudo make uninstall）
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;QT默认安装在/usr/local/Trolltech/Qt-4.8.6目录里面，进入该目录，测试&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/local/Trolltech/Qt-4.8.6
cd bin
./qmake -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tl@tl-virtual-machine:/usr/local/Trolltech/Qt-4.8.6/bin$ ./qmake -v
QMake version 2.01a
Using Qt version 4.8.6 in /usr/local/Trolltech/Qt-4.8.6/lib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果出现正确版本信息，表示安装成功。&lt;/p&gt;

&lt;p&gt;我的ubuntu安装了多个qmake，测试的结果是这样子的。（注意执行qmake -v命令的路径，因为4.8.6并没有设置环境变量，故得在qmake程序所在目录路径执行。）&lt;/p&gt;
&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;[linux-devkit]:/media/tl437x/qtcreator-&lt;span style=&#34;color: #800080;&#34;&gt;2.6&lt;/span&gt;.&lt;span style=&#34;color: #800080;&#34;&gt;1&lt;/span&gt;/bin&amp;gt; qmake -&lt;span style=&#34;color: #000000;&#34;&gt;v
QMake version &lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;3.0&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;
Using Qt version &lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;5.4&lt;/span&gt;.&lt;span style=&#34;color: #800080;&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;in&lt;/span&gt; /media/tl437x/ti-processor-sdk-linux-am437x-evm-&lt;span style=&#34;color: #800080;&#34;&gt;01.00&lt;/span&gt;.&lt;span style=&#34;color: #800080;&#34;&gt;00.03&lt;/span&gt;/linux-devkit/sysroots/cortexa9t2hf-vfp-neon-linux-gnueabi/usr/lib&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;tl@tl-&lt;span style=&#34;color: #0000ff;&#34;&gt;virtual&lt;/span&gt;-machine:~$ qmake -&lt;span style=&#34;color: #000000;&#34;&gt;v
QMake version &lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;.01a
Using Qt version &lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;4.8&lt;/span&gt;.&lt;span style=&#34;color: #800080;&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;in&lt;/span&gt; /usr/lib/i386-linux-gnu&lt;/pre&gt;

&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;tl@tl-&lt;span style=&#34;color: #0000ff;&#34;&gt;virtual&lt;/span&gt;-machine:/usr/local/Trolltech/Qt-&lt;span style=&#34;color: #800080;&#34;&gt;4.8&lt;/span&gt;.&lt;span style=&#34;color: #800080;&#34;&gt;6&lt;/span&gt;/bin$ ./qmake -&lt;span style=&#34;color: #000000;&#34;&gt;v
QMake version &lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;.01a
Using Qt version &lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;4.8&lt;/span&gt;.&lt;span style=&#34;color: #800080;&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;in&lt;/span&gt; /usr/local/Trolltech/Qt-&lt;span style=&#34;color: #800080;&#34;&gt;4.8&lt;/span&gt;.&lt;span style=&#34;color: #

&lt;p&gt;添加环境变量，（需要在任意目录下使用，才添加环境变量）&lt;/p&gt;
&lt;p&gt;首先需要设置用户环境变量，&lt;/p&gt;

&lt;p&gt;弹出一个编辑窗口，在末尾添加以下代码，&lt;/p&gt;
&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;export QTDIR=/usr/local/Trolltech/Qt-&lt;span style=&#34;color: #800080;&#34;&gt;4.8&lt;/span&gt;.&lt;span style=&#34;color: #800080;&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;
export PATH&lt;/span&gt;=$QTDIR/&lt;span style=&#34;color: #000000;&#34;&gt;bin:$PATH
export MANPATH&lt;/span&gt;=$QTDIR/&lt;span style=&#34;color: #000000;&#34;&gt;man:$MANPATH
export LD_LIBRARY_PATH&lt;/span&gt;=$QTDIR/lib:$LD_LIBRARY_PATH  &lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;然后设置root用户的环境变量，设置root用户的环境变量需要root权限，所以要加sudo，&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;sudo gedit /etc/profile  &lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;添加：&lt;/p&gt;
&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;export QTDIR=/usr/local/Trolltech/Qt-&lt;span style=&#34;color: #800080;&#34;&gt;4.8&lt;/span&gt;.&lt;span style=&#34;color: #800080;&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;
export PATH&lt;/span&gt;=$QTDIR/&lt;span style=&#34;color: #000000;&#34;&gt;bin:$PATH
export MANPATH&lt;/span&gt;=$QTDIR/&lt;span style=&#34;color: #000000;&#34;&gt;man:$MANPATH
export LD_LIBRARY_PATH&lt;/span&gt;=$QTDIR/lib:$LD_LIBRARY_PATH &lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;保存后退出，然后重启电脑，在终端的任意目录下输入qmake， 如果能出现正确信息，表示环境变量配置成功。&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&amp;nbsp;此处，我并没有添加系统变量！，下面直接通过qtcreator工具选项添加。&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;li&gt;&lt;strong&gt;安装qtcreator&lt;/strong&gt;&lt;/li&gt;&lt;/p&gt;

&lt;p&gt;安装路径：/home/tl/qtcreator-2.5.2&lt;/p&gt;
&lt;div class=&#34;cnblogs_code&#34;&gt;
&lt;pre&gt;chmod a+x qt-creator-linux-x86-opensource-&lt;span style=&#34;color: #800080;&#34;&gt;2.5&lt;/span&gt;.&lt;span style=&#34;color: #800080;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;.bin&lt;br /&gt;
 .&lt;/span&gt;/qt-creator-linux-x86-opensource-&lt;span style=&#34;color: #800080;&#34;&gt;2.5&lt;/span&gt;.&lt;span style=&#34;color: #800080;&#34;&gt;2&lt;/span&gt;.bin  &lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&amp;nbsp;卸载的时候在安装目录下/home/tl/qtcreator-2.5.2/bin，执行:uninstall&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;打开qtcreator，添加qt4.8.6，即刚刚安装好的那个版本。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://images2015.cnblogs.com/blog/781469/201601/781469-20160106172901965-4851180.jpg&#34; alt=&#34;&#34; width=&#34;802&#34; height=&#34;498&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img style=&#34;vertical-align: middle;&#34; src=&#34;http://images2015.cnblogs.com/blog/781469/201601/781469-20160106182922887-471010331.jpg&#34; alt=&#34;&#34; width=&#34;803&#34; height=&#34;515&#34; /&gt;&lt;/p&gt;
&lt;p&gt;成功运行，第一个桌面程序。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>