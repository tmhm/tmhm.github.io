<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Torcs on Well</title>
    <link>https://tmhm.github.io/categories/torcs/index.xml</link>
    <description>Recent content in Torcs on Well</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>wells217@163.com (Well)</managingEditor>
    <webMaster>wells217@163.com (Well)</webMaster>
    <copyright>(c) 2017 Well.</copyright>
    <atom:link href="https://tmhm.github.io/categories/torcs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>用Keras 和 DDPG play TORCS（1）</title>
      <link>https://tmhm.github.io/2016/10/26/%E7%94%A8keras-%E5%92%8C-ddpg-play-torcs1/</link>
      <pubDate>Wed, 26 Oct 2016 12:06:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/10/26/%E7%94%A8keras-%E5%92%8C-ddpg-play-torcs1/</guid>
      <description>

&lt;h1 id=&#34;用keras-和-ddpg-play-torcs-环境配置篇&#34;&gt;用Keras 和 DDPG play TORCS（环境配置篇）&lt;/h1&gt;

&lt;p&gt;原作者&lt;a href=&#34;https://yanpanlau.github.io/2016/10/11/Torcs-Keras.html&#34;&gt;Using Keras and Deep Deterministic Policy Gradient to play TORCS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;配置gym-torcs，&lt;a href=&#34;http://www.jianshu.com/p/a3432c0e1ef2&#34;&gt;参考&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;由于使用的环境是ubuntu 14.04 desktop版，故不需要安装opencv。&lt;/p&gt;

&lt;h3 id=&#34;安装一些依赖包&#34;&gt;安装一些依赖包：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    sudo apt-get install xautomation
    sudo pip install numpy
    sudo pip install gym
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;下载-gym-torcs源码-https-github-com-ugo-nama-kun-gym-torcs&#34;&gt;下载&lt;a href=&#34;https://github.com/ugo-nama-kun/gym_torcs&#34;&gt;gym_torcs源码&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;然后将&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gym_torcs/vtorcs-RL-color/src/modules/simu/simuv2/simu.cpp
中第64行替换为
if (isnan((float)(car-&amp;gt;ctrl-&amp;gt;gear)) || isinf(((float)(car-&amp;gt;ctrl-&amp;gt;gear)))) car-&amp;gt;ctrl-&amp;gt;gear = 0;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;即添加两个（float），否则，下一步make的时候会出现error，安转失败&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;cd 到 gym_torcs/vtorcs-Rl-color目录，&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;执行以下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudo apt-get install libglib2.0-dev  libgl1-mesa-dev libglu1-mesa-dev  freeglut3-dev  libplib-dev  libopenal-dev libalut-dev libxi-dev libxmu-dev libxrender-dev  libxrandr-dev libpng12-dev

    ./configure

    make

    sudo make install

    sudo make datainstall
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输入命令
        torcs&lt;/p&gt;

&lt;p&gt;即将打开，熟悉的TORCS 界面， 已打patch scr&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://images2015.cnblogs.com/blog/781469/201611/781469-20161121150329987-1053577076.bmp&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;ddpg源码-https-github-com-yanpanlau-ddpg-keras-torcs&#34;&gt;&lt;a href=&#34;https://github.com/yanpanlau/DDPG-Keras-Torcs&#34;&gt;DDPG源码&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;    pip install keras
    pip install tensorflow

    git clone https://github.com/yanpanlau/DDPG-Keras-Torcs.git
    cd DDPG-Keras-Torcs
    cp *.* ../gym_torcs
    cd ../gym_torcs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面运行ddpg.py&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    python ddpg.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;开始看到漂亮的训练过程啦&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://images2015.cnblogs.com/blog/781469/201611/781469-20161121150308612-1273258933.bmp&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;在笔记本上运行ddpg.py的时候会出现 keras.backecd中没有set_session模块，初步猜想应该是GPU的问题，在带GPU台式机的虚拟机ubuntu14.04上，即可以正常运行。&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;注意到，笔记本中一个细节是：Using Theano backend&lt;/li&gt;
&lt;li&gt;而，虚拟机中显示的是：Using tensorflow backend&lt;/li&gt;
&lt;li&gt;在&lt;a href=&#34;https://keras.io/backend/&#34;&gt;keras/backend主页&lt;/a&gt;找到问题所在,是keras的配置问题&lt;/li&gt;

&lt;li&gt;&lt;p&gt;打开~/.keras/keras.json，把backend选项，修改Theano为tensorflow，然后wq，退出即可。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        {
            &amp;quot;image_dim_ordering&amp;quot;: &amp;quot;tf&amp;quot;,
            &amp;quot;epsilon&amp;quot;: 1e-07,
            &amp;quot;floatx&amp;quot;: &amp;quot;float32&amp;quot;,
            &amp;quot;backend&amp;quot;: &amp;quot;tensorflow&amp;quot;
        }
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;修改默认python&#34;&gt;修改默认python&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;删除系统自带的python软链接&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        rm /user/bin/python
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;建立新安装的python 的软链接&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        ln -s ~/anaconda2/bin/python /user/bin/python
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;现在打开命令行python 即是安装在~/anaconda2/bin/python 的python程序&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>