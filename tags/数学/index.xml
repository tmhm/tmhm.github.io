<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数学 on Well</title>
    <link>https://tmhm.github.io/tags/%E6%95%B0%E5%AD%A6/</link>
    <description>Recent content in 数学 on Well</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>wells217@163.com (Well)</managingEditor>
    <webMaster>wells217@163.com (Well)</webMaster>
    <copyright>(c) 2017 Well.</copyright>
    <lastBuildDate>Tue, 30 Aug 2016 10:50:00 +0000</lastBuildDate>
    <atom:link href="https://tmhm.github.io/tags/%E6%95%B0%E5%AD%A6/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>数学随记（转）</title>
      <link>https://tmhm.github.io/2016/08/30/%E6%95%B0%E5%AD%A6%E9%9A%8F%E8%AE%B0%E8%BD%AC/</link>
      <pubDate>Tue, 30 Aug 2016 10:50:00 +0000</pubDate>
      <author>wells217@163.com (Well)</author>
      <guid>https://tmhm.github.io/2016/08/30/%E6%95%B0%E5%AD%A6%E9%9A%8F%E8%AE%B0%E8%BD%AC/</guid>
      <description>

&lt;h3 id=&#34;数学随记:f15f8ddb13e5e15f5ca6ebf995658e96&#34;&gt;数学随记&lt;/h3&gt;

&lt;p&gt;转载自：&lt;a href=&#34;http://www.matrix67.com/blog/archives/4294&#34;&gt;随记：我们需要怎样的数学教育？&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;虚数i:f15f8ddb13e5e15f5ca6ebf995658e96&#34;&gt;虚数i&lt;/h3&gt;

&lt;p&gt;虚数是什么？&lt;/p&gt;

&lt;p&gt;为什么要承认虚数？&lt;/p&gt;

&lt;p&gt;虚数怎么就表示旋转了？&lt;/p&gt;

&lt;p&gt;其实，人们建立复数理论，并不是因为人们有时需要处理根号里是负数的情况，而是因为下面这个不可抗拒的理由：如果承认虚数，那么 n 次多项式就会有恰好 n 个根，数系一下子就如同水晶球一般的完美了。&lt;/p&gt;

&lt;p&gt;但复数并不能形象地反映在数轴上，这不仅是因为实数在数轴上已经完备了，还有另外一个原因：没有什么几何操作连做两次就能实现取相反数。比如，“乘以 3”就代表数轴上的点离原点的距离扩大到原来的三倍，“3 的平方”，也就是“乘以 3 再乘以 3”，就是把上述操作连做两次，即扩大到 9 倍。同样地，“乘以 -1”表示把点翻折到数轴另一侧，“-1 的平方”就会把这个点又翻回来。&lt;/p&gt;

&lt;p&gt;但是，怎么在数轴上表示“乘以 i ”的操作？换句话说，什么操作连做两次能够把 1 变成 -1 ？一个颇具革命性的创意答案便是，把这个点绕着原点旋转 90 度。转 90 度转两次，自然就跑到数轴的另一侧了。&lt;/p&gt;

&lt;p&gt;没错，这就把数轴扩展到了整个平面，正好解决了复数没地方表示的问题。于是，复数的乘法可以解释为缩放加旋转，复数本身自然也就有了 z = r (cosθ + sinθi) 的表示方式。顺着这个道理推下去，一切都顺理成章了。复数不但有了几何解释，有时还能更便捷地处理几何问题&lt;/p&gt;

&lt;h2 id=&#34;线性代数:f15f8ddb13e5e15f5ca6ebf995658e96&#34;&gt;线性代数&lt;/h2&gt;

&lt;p&gt;此处&lt;a href=&#34;http://mathoverflow.net/questions/7584/what-are-the-most-misleading-alternate-definitions-in-taught-mathematics&#34;&gt;网页&lt;/a&gt;，有人一语道破线性代数的真谛。
就好像把 x 变成 2 x 一样，我们经常需要把 (x, y) 变成 (2 x + y, x – 3 y) 之类的东西，这就叫做线性变换。&lt;/p&gt;

&lt;p&gt;于是才想到定义矩阵乘法，用于表示一切线性变换。几何上看，把平面上的每个点 (x, y) 都变到 (2 x + y, x – 3 y) 的位置上去，效果就相当于对这个平面进行了一个“线性的拉扯”。&lt;/p&gt;

&lt;p&gt;矩阵的乘法，其实就是多个线性变换叠加的效果，它显然满足结合律，但不满足交换律。&lt;/p&gt;

&lt;p&gt;主对角线全是 1 的矩阵所对应的线性变换其实就是不变的意思，因此它叫做单位矩阵。&lt;/p&gt;

&lt;p&gt;矩阵 A 乘以矩阵 B 得单位矩阵，就是做完线性变换 A 后再做一次线性变换 B 就又变回去了的意思，难怪我们说矩阵 B 是矩阵 A 的逆矩阵。&lt;/p&gt;

&lt;p&gt;课本上对行列式的定义千奇百怪，又是什么递归，又是什么逆序对，还编写口诀帮助大家记忆。&lt;/p&gt;

&lt;p&gt;其实，行列式的真正定义就一句话：&lt;strong&gt;每个单位正方形在线性变换之后的面积&lt;/strong&gt;。因此，单位矩阵的行列式当然就为 1，某行全为 0 的行列式显然为 0 （因为某一维度会被无视掉，线性变换会把整个平面压扁）， |A·B| 显然等于 |A|·|B| 。行列式为 0 ，对应的矩阵当然不可逆，因为这样的线性变换已经把平面压成一条线了，什么都不能把它变回去了。当然，更高阶的矩阵就对应了更高维的空间。&lt;/p&gt;

&lt;p&gt;一瞬间，所有东西都解释清楚了。&lt;/p&gt;

&lt;p&gt;最近看到李泽湘教授的一句话，“很多工业界用的算法是错的，所以很难做到质量标准的提升，和工匠的定位。”&lt;/p&gt;

&lt;p&gt;做技术研究，做到最后发现都是数学问题。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>